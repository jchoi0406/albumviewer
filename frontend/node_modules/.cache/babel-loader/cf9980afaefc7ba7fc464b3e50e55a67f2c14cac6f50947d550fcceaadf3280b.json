{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jiyon\\\\Desktop\\\\albumviewer\\\\frontend\\\\src\\\\pages\\\\Add.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { addAlbum, getSearchedAlbums } from './util/api';\nimport AlbumListSearch from './components/AlbumListSearch';\nimport AddFormSearch from './components/AddFormSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Add() {\n  _s();\n  const navigate = useNavigate();\n  const [albumData, setAlbumData] = useState({\n    albumReview: \"\",\n    albumRating: null\n  });\n  const [searchAlbumState, setSearchAlbumState] = useState([]);\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\n  function handleChange(event) {\n    setAlbumData(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value\n    }));\n  }\n  ;\n  async function displaySearchAlbums() {\n    const albums = await searchAlbums();\n    setSearchAlbumState(albums.items);\n  }\n  async function searchAlbums() {\n    try {\n      const res = await getSearchedAlbums(albumData.albumName);\n      return res.data;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async function handleClick(event) {\n    event.preventDefault();\n    try {\n      const body = {\n        album: searchAlbumState[selectedAlbum],\n        userInput: albumData\n      };\n      await addAlbum(body);\n      navigate(\"/\");\n    } catch (err) {\n      console.log(\"Error\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"add-form\",\n    onSubmit: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(AddFormSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-form-add\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"add-form-add-textarea\",\n        placeholder: \"Write a review!\",\n        type: \"text\",\n        name: \"albumReview\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Out of 10\",\n        onChange: handleChange,\n        name: \"albumRating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        type: \"submit\",\n        children: \"Add album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Add, \"0Wq3XcYjuTobtZRPECiPKKqu9og=\", false, function () {\n  return [useNavigate];\n});\n_c = Add;\nvar _c;\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"names":["React","useState","useNavigate","addAlbum","getSearchedAlbums","AlbumListSearch","AddFormSearch","jsxDEV","_jsxDEV","Add","_s","navigate","albumData","setAlbumData","albumReview","albumRating","searchAlbumState","setSearchAlbumState","selectedAlbum","setSelectedAlbum","handleChange","event","prevState","target","name","value","displaySearchAlbums","albums","searchAlbums","items","res","albumName","data","err","console","log","handleClick","preventDefault","body","album","userInput","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/jiyon/Desktop/albumviewer/frontend/src/pages/Add.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { addAlbum, getSearchedAlbums } from './util/api';\r\nimport AlbumListSearch from './components/AlbumListSearch';\r\nimport AddFormSearch from './components/AddFormSearch';\r\nexport function Add() {\r\n  const navigate = useNavigate();\r\n  const [albumData, setAlbumData] = useState({\r\n    albumReview: \"\",\r\n    albumRating: null,\r\n  });\r\n  const [searchAlbumState, setSearchAlbumState] = useState([]);\r\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\r\n  function handleChange(event){\r\n    setAlbumData(prevState=>(\r\n      {...prevState, [event.target.name]: event.target.value}\r\n    ))\r\n  }; \r\n\r\n  async function displaySearchAlbums(){\r\n    const albums = await searchAlbums();\r\n    setSearchAlbumState(albums.items);\r\n  }\r\n  async function searchAlbums(){\r\n    try{\r\n      const res = await getSearchedAlbums(albumData.albumName);\r\n      return res.data\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n\r\n  }\r\n\r\n  async function handleClick(event){\r\n    event.preventDefault();\r\n    try{\r\n      const body = {\r\n        album: searchAlbumState[selectedAlbum],\r\n        userInput: albumData\r\n      }\r\n      await addAlbum(body);\r\n      navigate(\"/\");\r\n    }\r\n    catch(err){\r\n      console.log(\"Error\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={handleClick}>\r\n      <AddFormSearch />\r\n      <div className='add-form-add'>\r\n        <textarea className='add-form-add-textarea' placeholder='Write a review!' type=\"text\" name=\"albumReview\" onChange={handleChange}></textarea>\r\n        <input type=\"number\" placeholder=\"Out of 10\" onChange={handleChange} name=\"albumRating\"></input> \r\n        <button className=\"add-button\"type=\"submit\">Add album</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}